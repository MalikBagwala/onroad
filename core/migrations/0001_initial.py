# Generated by Django 5.0.1 on 2024-01-15 09:58

import core.utils.random
import core.utils.time
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('estb_year', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'makes',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('SED', 'Sedan'), ('SUV', 'SUV'), ('CRS', 'Crossover'), ('HAT', 'Hatchback'), ('PCK', 'Pickup Truck'), ('MTC', 'Motorcycle'), ('VAN', 'Van'), ('CON', 'Convertible'), ('ATV', 'ATV'), ('BIC', 'Bicycle'), ('MO', 'Moped')], max_length=3)),
            ],
            options={
                'db_table': 'vehicle_types',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.city')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=255)),
                ('mime_type', models.CharField(max_length=255)),
                ('etag', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('bucket', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=255)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Media',
                'db_table': 'media',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.country')),
            ],
            options={
                'db_table': 'states',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.state'),
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('launch_date', models.DateField()),
                ('name', models.CharField(max_length=255)),
                ('fuel_type', models.CharField(choices=[('PT', 'Petrol'), ('DL', 'Diesel'), ('CG', 'CNG'), ('EL', 'Electric'), ('HB', 'Hybrid')], max_length=2)),
                ('transmission', models.CharField(choices=[('MT', 'Manual Transmission'), ('SMT', 'Sequential Manual Transmission'), ('AMT', 'Automated Manual Transmission'), ('AT', 'Traditional Automatic Transmission'), ('DCT', 'Dual-Clutch Transmission'), ('CVT', 'Continuously Variable Transmission'), ('S-A', 'Semi-Automatic Transmission'), ('CVT-TC', 'CVT with Torque Converter'), ('DSG', 'Direct-Shift Gearbox'), ('PSH', 'Power Split Hybrid Transmission'), ('E-CVT', 'Electronic Continuously Variable Transmission'), ('ASG', 'Automated Sequential Gearbox'), ('HST', 'Hydrostatic Transmission'), ('IVT', 'Infinitely Variable Transmission')], default='MT', max_length=6)),
                ('description', models.TextField()),
                ('specifications', models.JSONField(blank=True, default=dict, null=True)),
                ('manufacturer_link', models.URLField(blank=True, max_length=255, null=True)),
                ('attachments', models.ManyToManyField(blank=True, to='core.media')),
            ],
            options={
                'db_table': 'variants',
            },
        ),
        migrations.CreateModel(
            name='VariantColor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('hex_code', models.CharField(blank=True, max_length=7, null=True)),
                ('attachments', models.ManyToManyField(blank=True, to='core.media')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.variant')),
            ],
            options={
                'db_table': 'variant_colors',
                'unique_together': {('variant', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('AC', 'Accepted'), ('RJ', 'Rejected')], default='PD', max_length=2)),
                ('quoted_on', models.DateField()),
                ('dealership_name', models.CharField(max_length=255)),
                ('ex_showroom', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('insurance', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('accessories', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('subsidies', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('misc', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('metadata', models.JSONField(blank=True, default=dict, null=True)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('remark', models.TextField(blank=True, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.city')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('attachments', models.ManyToManyField(blank=True, to='core.media')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.variant')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.variantcolor')),
            ],
            options={
                'db_table': 'contributions',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.make')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vehicletype')),
            ],
            options={
                'db_table': 'vehicles',
            },
        ),
        migrations.AddField(
            model_name='variant',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vehicle'),
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('otp', models.CharField(default=core.utils.random.generate_otp, max_length=6)),
                ('expires_at', models.DateTimeField(default=core.utils.time.get_otp_expires_at)),
                ('used', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('EM', 'Email'), ('PH', 'Phone')], default='EM', max_length=2)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'otps',
                'ordering': ['-created_at'],
                'unique_together': {('otp', 'user', 'expires_at', 'type')},
            },
        ),
        migrations.CreateModel(
            name='PasswordChangeRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expires_at', models.DateTimeField(default=core.utils.time.get_password_change_request_expires_at)),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Password Change Requests',
                'db_table': 'password_change_requests',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'expires_at')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('UP', 'Upvote'), ('DN', 'Downvote')], max_length=2)),
                ('contribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.contribution')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'votes',
                'unique_together': {('contribution', 'user')},
            },
        ),
    ]
